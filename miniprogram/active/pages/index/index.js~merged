"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
// index.ts
// 获取应用实例
var app = getApp();
var WebClient_1 = require("../../../utils/WebClient");
var courseClient_1 = require("../../../utils/courseClient");
<<<<<<< HEAD
var MakeUpGroup_1 = require("../../../utils/MakeUpGroup");
var makeUpGroup = new MakeUpGroup_1.MakeUpGroup();
=======
>>>>>>> origin/master
var courseClient = new courseClient_1.CourseClient();
var webClient = new WebClient_1.WebClient();
Page({
    data: {
        activeList: [],
        pageIndex: 0,
        pageSize: 10,
    },
    // 事件处理函数
    bindViewTap: function () {
        wx.navigateTo({
            url: '../logs/logs',
        });
    },
    onLoad: function (option) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.getInteractActivity();
                return [2 /*return*/];
            });
        });
    },
    getInteractActivity: function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
<<<<<<< HEAD
                    case 0: return [4 /*yield*/, makeUpGroup.getTopicListAsync(1, 3).then(function (res) {
                            console.log(res);
                            _this.setData({
                                activeList: res
=======
                    case 0: return [4 /*yield*/, courseClient.getInteractActivityListAsync(this.data.pageIndex, this.data.pageSize).then(function (res) {
                            console.log(res);
                            _this.setData({
                                activeList: res.data
>>>>>>> origin/master
                            });
                        })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    },
    //页面跳转
    goNext: function (event) {
        console.log(event.currentTarget.dataset.url);
        wx.navigateTo({
            url: event.currentTarget.dataset.url
        });
    },
    /**
  * 用户点击右上角分享
  */
    onShareAppMessage: function () {
        return {
            title: '最新活动',
            path: '/active/pages/index/index'
        };
    },
    /**
  * 页面上拉触底事件的处理函数
  */
    onReachBottom: function () {
        this.setData({
            pageIndex: this.data.pageIndex + 1
        });
        this.getInteractActivity();
    },
});
